<!DOCTYPE html>
<html>
  <head>
      <title>IndexedDB</title>
    <style>
      body {
        color: #222;
        font: 14px Arial;
      }
      
      body a {
        color: #3D5C9D;
        text-decoration: none;
      }

    </style>
      <script>

          // source - http://www.html5rocks.com/en/tutorials/indexeddb/todo/
          // a more indepth article - http://www.html5labs.com/IndexedDBTest/CodeSnippets/samples.html

          var html5rocks = {};
          window.indexedDB = window.indexedDB || window.webkitIndexedDB || window.mozIndexedDB;

          if ('webkitIndexedDB' in window) {
              window.IDBTransaction = window.webkitIDBTransaction;
              window.IDBKeyRange = window.webkitIDBKeyRange;
          }

          html5rocks.indexedDB = {};
          html5rocks.indexedDB.db = null;

          html5rocks.indexedDB.onerror = function (e) {
              console.log(e);
          };

          html5rocks.indexedDB.open = function () {
              var version = 1;
              var request = indexedDB.open("HTML5TrainingDatabase", version);

              // We can only create Object stores in a versionchange transaction.
              request.onupgradeneeded = function (e) {
                  var db = e.target.result;

                  // A versionchange transaction is started automatically.
                  e.target.transaction.onerror = html5rocks.indexedDB.onerror;

                  if (db.objectStoreNames.contains("PersonalDetails")) {
                      db.deleteObjectStore("PersonalDetails");
                  }

                  var store = db.createObjectStore("PersonalDetails", { keyPath: "timeStamp" });
              };

              request.onsuccess = function (e) {
                  html5rocks.indexedDB.db = e.target.result;
                  html5rocks.indexedDB.getAllTodoItems();
              };

              request.onerror = html5rocks.indexedDB.onerror;
          };

          html5rocks.indexedDB.addTodo = function (todoText) {
              var db = html5rocks.indexedDB.db;
              var trans = db.transaction(["todo"], "readwrite");
              var store = trans.objectStore("todo");

              var data = {
                  "text": todoText,
                  "timeStamp": new Date().getTime(),
                  "name": "Sheo",
                  "Age": 5
              };

              var request = store.put(data);

              request.onsuccess = function (e) {
                  html5rocks.indexedDB.getAllTodoItems();
              };

              request.onerror = function (e) {
                  console.log("Error Adding: ", e);
              };
          };

          html5rocks.indexedDB.deleteTodo = function (id) {
              var db = html5rocks.indexedDB.db;
              var trans = db.transaction(["todo"], "readwrite");
              var store = trans.objectStore("todo");

              var request = store.delete(id);

              request.onsuccess = function (e) {
                  html5rocks.indexedDB.getAllTodoItems();
              };

              request.onerror = function (e) {
                  console.log("Error Adding: ", e);
              };
          };

          html5rocks.indexedDB.getAllTodoItems = function () {
              var todos = document.getElementById("todoItems");
              todos.innerHTML = "";

              var db = html5rocks.indexedDB.db;
              var trans = db.transaction(["todo"], "readwrite");
              var store = trans.objectStore("todo");

              // Get everything in the store;
              var keyRange = IDBKeyRange.lowerBound(0);
              var cursorRequest = store.openCursor(keyRange);

              cursorRequest.onsuccess = function (e) {
                  var result = e.target.result;
                  if (!!result == false)
                      return;

                  renderTodo(result.value);
                  result.continue();
              };

              cursorRequest.onerror = html5rocks.indexedDB.onerror;
          };

          function renderTodo(row) {
              var todos = document.getElementById("todoItems");
              var li = document.createElement("li");
              var a = document.createElement("a");
              var t = document.createTextNode(row.text + ' ' + row.name + ' ' + row.Age);

              a.addEventListener("click", function () {
                  html5rocks.indexedDB.deleteTodo(row.timeStamp);
              }, false);

              a.href = "#";
              a.textContent = " [Delete]";
              li.appendChild(t);
              li.appendChild(a);
              todos.appendChild(li);
          }

          function addTodo() {
              var todo = document.getElementById("todo");
              html5rocks.indexedDB.addTodo(todo.value);
              todo.value = "";
          }

          function init() {
              html5rocks.indexedDB.open();
          }

          window.addEventListener("DOMContentLoaded", init, false);
      </script>
  </head>
  <body>
    <fieldset>
        <legend>Simple TODO implementation using IndexedDB</legend>
            <p>
                Name: <input type="text" id="txtName" name="txtName" placeholder="What is your name?" required />
                Address: <input type="text" id="txtAddress" name="txtAddress" placeholder="Address?" required />
                Age: <input type="text" id="txtAge" size="5" name="txtAge" placeholder="Age?" required />
                <input type="submit" value="Add Todo Item" onclick="addTodo(); return false;">
            </p>
    </fieldset>
    
    <ul id="todoItems"></ul>


  </body>
</html>​